name: Deploy Portofolio WEB APP
on:
  push:
    branches:
      - main
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Pull environment form variable
        run: |
          echo "$ENV_GITHUB" > .env_github

      #      - uses: npm/action-setup@v4
      #        name: Install npm
      #        with:
      #          version: 8
      #          run_install: false
      #      - name: Get npm store directory
      #        shell: bash
      #        run: |
      #          echo "STORE_PATH=$(npm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup npm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-npm-store-${{ hashFiles('**/npm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-npm-store-


      - name: Install dependencies
        run: npm install --no-frozen-lockfile

      - name: Run Production
        run: npm run build

      - name: Upload app-artifacts for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          #          path: ${{ github.sha }}.tar.gz
          path: .output

      - name: Download app-artifacts for distribution
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts
          #          path: ${{ github.sha }}.tar.gz
          path: .output

      #      - run: tar.gz -zxvf ${{ github.sha }}.tar.gz .
      #      - run: tar.gz -zxvf app-artifacts.tar.gz .
      #      - run: zip -r app-artifacts.zip .output
      - name: Pull environment form variable
        run: echo "$ENV_GITHUB" > .env_github

      - name: Upload app-artifacts to remote folder
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          #          source: ${{ github.sha }}.tar.gz
          #          source: "app-artifacts.zip"
          source: ".output"
          target: "/var/www/portofolio/public/"
          strip_components: 1

      #      - name: Extract archive and create directories
      #        uses: appleboy/ssh-action@master
      #        env:
      #          GITHUB_SHA: ${{ github.sha }}
      #        with:
      #          host: ${{ secrets.SSH_HOST }}
      #          username: ${{ secrets.SSH_USERNAME }}
      #          key: ${{ secrets.SSH_PRIVATE_KEY }}
      #          port: ${{ secrets.SSH_PORT }}
      #          envs: GITHUB_SHA
      #          script: unzip -r app-artifacts.zip .


      - name: Deploy to server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: .output/
          remote: /var/www/portofolio/.output/
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
          recursive: true
          verbose: true
          dotfiles: true

      - name: Prepare NuxtJS 3 Web App
        run: |
          echo ":: =========================== ::"
          echo "Run NuxtJS 3 Web App"
          echo "HENDI SANTIKA Portofolio"
          echo ":: =========================== ::"
      #          npm install pm2
      #          pm2 restart "PORTOFOLIO WEB APP"

      - name: Restart webapp via pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          #          script: sh /var/www/portofolio/pm2.sh
          #          script: "/home/deployer/.local/share/pnpm/pm2 restart \"PORTOFOLIO WEB APP\""
          script: |
            export PATH=$PATH:/home/deployer/.nvm/versions/node/v20.10.0/bin;
            pm2 restart "PORTOFOLIO WEB APP"
