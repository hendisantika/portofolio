name: Automated Release Deployment

on:
  push:
    branches:
      - main
      - 'feature/deploy'
    tags: # Remove the `branches` node and add this one
      - '*'

env:
  NODE_VERSION: 21.5.0
  IP_ADDRESS: "103.251.44.145"

jobs:
  test-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test Application
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - run: |
          npm install
          npm run build
  #          npm test

  create-deployment-artifacts:
    needs: test-application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build App Artifacts
        env:
          GITHUB_SHA: ${{ github.sha }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - run: |
          touch .env
          echo APP_DOMAIN=https://hendisantika.my.id >> .env
          echo RELEASE_VERSION=${GITHUB_REF} >> .env
          echo GITHUB_SHA=${GITHUB_SHA} >> .env
          npm install
          npm run build
          cp .env .output/server/.env

      - name: Store app-artifacts for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          #          path: ${{ github.sha }}.tar.gz
          path: .output

  prepare-release-on-servers:
    needs: create-deployment-artifacts
    name: "Prepare release on INT server"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-artifacts
          #          path: ${{ github.sha }}.tar.gz
          path: .output

      #      - run: tar.gz -zxvf ${{ github.sha }}.tar.gz .
      #      - run: tar.gz -zxvf app-artifacts.tar.gz .
      - run: zip -r app-artifacts.zip .output

          #      - uses: ncipollo/release-action@v1
          #        with:
          #          artifacts: ${{ github.sha }}.tar.gz
      #          artifacts: "app-artifacts.zip"

      - name: Upload app-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          #          source: ${{ github.sha }}.tar.gz
          source: app-artifacts.zip
          target: /var/www/portofolio/artifacts

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "/var/www/portofolio/releases/${GITHUB_SHA}"
            tar xzf /var/www/portofolio/artifacts/${GITHUB_SHA}.tar.gz -C "/var/www/portofolio/releases/${GITHUB_SHA}"
            tar xzf /var/www/portofolio/artifacts/${GITHUB_SHA}-database.tar.gz -C "/var/www/portofolio"
            rm -rf /var/www/portofolio/artifacts/${GITHUB_SHA}.tar.gz

  activate-release:
    name: "Activate release"
    runs-on: ubuntu-latest
    needs: prepare-release-on-servers
    steps:
      - name: Activate Release
        uses: appleboy/ssh-action@master
        env:
          RELEASE_PATH: /var/www/portofolio/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: /var/www/portofolio/live
        with:
          host: ${{ env.IP_ADDRESS }}
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "22"
          envs: RELEASE_PATH,ACTIVE_RELEASE_PATH
          script: |
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            systemctl restart hendisantika.my.id
            chown -R www-data:www-data ${RELEASE_PATH}

  clean-up:
    name: "Clean up old versions"
    runs-on: ubuntu-latest
    needs: activate-release
    steps:
      - name: clean up old releases
        uses: appleboy/ssh-action@master
        with:
          host: ${{env.IP_ADDRESS}}
          username: "root"
          key: ${{ secrets.SSH_KEY }}
          port: "22"
          script: |
            cd /var/www/portofolio/releases && ls -t -1 | tail -n +4 | xargs rm -rf
            cd /var/www/portofolio/artifacts && rm -rf *
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: app-artifacts
