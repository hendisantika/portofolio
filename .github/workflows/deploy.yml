name: Automated Release Deployment

on:
  push:
    branches:
      - main
      - 'feature/deploy'

env:
  NODE_VERSION: 21
  IP_ADDRESS: "103.251.44.145"

jobs:
  test-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test Application
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - run: |
          npm install
          npm run build
          npm test

  create-deployment-artifacts:
    needs: test-application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build App Artifacts
        env:
          GITHUB_SHA: ${{ github.sha }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_TEST_KEY }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'
      - run: |
          touch .env
          echo STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_TEST_KEY }} >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo APP_DOMAIN=https://fullstackjack.dev >> .env
          echo RELEASE_VERSION=${GITHUB_REF} >> .env
          echo GITHUB_SHA=${GITHUB_SHA} >> .env
          yarn
          yarn build
          cp .env .output/server/.env
          cp .env server/database/
          tar -czf "${GITHUB_SHA}".tar.gz .output
          tar -czf "${GITHUB_SHA}"-database.tar.gz -C ./server database

      - name: Store app-artifacts for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: ${{ github.sha }}.tar.gz

      - name: Store database-artifacts for distribution
        uses: actions/upload-artifact@v3
        with:
          name: database-artifacts
          path: ${{ github.sha }}-database.tar.gz

  prepare-release-on-servers:
    needs: create-deployment-artifacts
    name: "Prepare release on INT server"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-artifacts

      - uses: actions/download-artifact@v3
        with:
          name: database-artifacts
      - name: Upload app-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{env.IP_ADDRESS}}
          port: "22"
          username: "root"
          key: ${{ secrets.SSH_KEY }}
          source: ${{ github.sha }}.tar.gz
          target: /var/www/portofolio/artifacts

      - name: Upload database-artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{env.IP_ADDRESS}}
          port: "22"
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ github.sha }}-database.tar.gz
          target: /var/www/portofolio

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{env.IP_ADDRESS}}
          username: "root"
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "22"
          envs: GITHUB_SHA
          script: |
            mkdir -p "/var/www/portofolio/releases/${GITHUB_SHA}"
            tar xzf /var/www/portofolio/artifacts/${GITHUB_SHA}.tar.gz -C "/var/www/portofolio/releases/${GITHUB_SHA}"
            tar xzf /var/www/portofolio/artifacts/${GITHUB_SHA}-database.tar.gz -C "/var/www/portofolio"
            rm -rf /var/www/portofolio/artifacts/${GITHUB_SHA}.tar.gz

  activate-release:
    name: "Activate release"
    runs-on: ubuntu-latest
    needs: prepare-release-on-servers
    steps:
      - name: Activate Release
        uses: appleboy/ssh-action@master
        env:
          RELEASE_PATH: /var/www/portofolio/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: /var/www/portofolio/live
        with:
          host: ${{env.IP_ADDRESS}}
          username: "root"
          key: ${{ secrets.SSH_KEY }}
          port: "22"
          envs: RELEASE_PATH,ACTIVE_RELEASE_PATH
          script: |
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            systemctl restart fullstackjack
            chown -R www-data:www-data ${RELEASE_PATH}
            chown -R www-data:www-data  /var/www/portofolio/database
            cd /var/www/portofolio/database && npx prisma migrate deploy

  clean-up:
    name: "Clean up old versions"
    runs-on: ubuntu-latest
    needs: activate-release
    steps:
      - name: clean up old releases
        uses: appleboy/ssh-action@master
        with:
          host: ${{env.IP_ADDRESS}}
          username: "root"
          key: ${{ secrets.SSH_KEY }}
          port: "22"
          script: |
            cd /var/www/portofolio/releases && ls -t -1 | tail -n +4 | xargs rm -rf
            cd /var/www/portofolio/artifacts && rm -rf *
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: app-artifacts
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: database-artifacts
